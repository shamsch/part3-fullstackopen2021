{"version":3,"sources":["components/displayphonebook.js","components/filter.js","components/personform.js","services/backendrequests.js","components/notification.js","components/error.js","App.js","index.js"],"names":["DisplayPhonebook","props","displayPersonList","filter","length","personsList","obj","name","toUpperCase","map","person","number","onClick","e","handleDelete","target","id","Filter","value","onChange","updateFilterField","PersonForm","onSubmit","addNewPerson","newName","updateNameField","newNumber","updateNumberField","type","baseUrl","newObject","axios","post","then","res","data","get","response","delete","put","Notification","message","className","Error","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","errorMessage","setErrorMessage","useEffect","services","initialData","allName","preventDefault","includes","window","confirm","personWhoseNumberToUpdate","find","newPersonObject","updatedPerson","catch","error","setTimeout","returnedData","concat","personToDelete","newPersonList","eachPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a622110e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DisplayPhonebook = (props) => {\r\n  let displayPersonList = props.filter.length\r\n    ? props.personsList.filter(\r\n        (obj) => obj.name.toUpperCase() === props.filter.toUpperCase()\r\n      )\r\n    : props.personsList;\r\n\r\n  return (\r\n    <div>\r\n      {displayPersonList.map((person) => (\r\n        <p key={person.id}>\r\n          {person.name} {person.number} <button onClick={(e)=> props.handleDelete(e.target.id)} id={person.id}>delete</button>\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayPhonebook;\r\n","import React from 'react';\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input value={props.filter} onChange={props.updateFilterField} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.addNewPerson}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.updateNameField} />\r\n        </div>\r\n\r\n        <div>\r\n          number:{\" \"}\r\n          <input value={props.newNumber} onChange={props.updateNumberField} />\r\n        </div>\r\n\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((res)=> res.data)\r\n};\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) =>{\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then((response)=>response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { create, getAll, remove, update };\r\n","import React from 'react';\r\n\r\nconst Notification = ({message}) => {\r\n    if (message ===null){\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"notification\">\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Error = ({message}) => {\r\n    if (message ===null){\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;","import React, { useState, useEffect } from \"react\";\r\nimport DisplayPhonebook from \"./components/displayphonebook\";\r\nimport Filter from \"./components/filter\";\r\nimport PersonForm from \"./components/personform\";\r\nimport services from \"./services/backendrequests\";\r\nimport \"./index.css\";\r\nimport Notification from \"./components/notification\";\r\nimport Error from \"./components/error\";\r\n\r\nconst App = () => {\r\n  //all states\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  //use effect to fetch data from the server running at port 3001 locally\r\n\r\n  useEffect(\r\n    () =>\r\n      services.getAll().then((initialData) => {\r\n        setPersons(initialData);\r\n      }),\r\n    []\r\n  );\r\n\r\n  //event handlers\r\n\r\n  let allName = persons.map((person) => person.name);\r\n\r\n  const addNewPerson = (e) => {\r\n    e.preventDefault();\r\n    if (allName.includes(newName)) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace the old number with a new one?`\r\n        )\r\n      ) {\r\n        const personWhoseNumberToUpdate = persons.find(\r\n          (person) => person.name === newName\r\n        );\r\n        const newPersonObject = {\r\n          ...personWhoseNumberToUpdate,\r\n          number: newNumber,\r\n        };\r\n        services\r\n          .update(personWhoseNumberToUpdate.id, newPersonObject)\r\n          .then((updatedPerson) => {\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id === personWhoseNumberToUpdate.id\r\n                  ? updatedPerson\r\n                  : person\r\n              )\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            setErrorMessage(`Fail: ${error.response.data.error}`);\r\n            setTimeout(() => {\r\n              setErrorMessage(null);\r\n            }, 4500);\r\n          });\r\n      }\r\n    } else {\r\n      let newPersonObject = { name: newName, number: newNumber };\r\n\r\n      //storing the new person in the server and changing the state causing rerender and displaying the changed list of person newly fetched from the server\r\n      services\r\n        .create(newPersonObject)\r\n        .then((returnedData) => {\r\n          // console.log(returnedData)\r\n          setPersons(persons.concat(returnedData));\r\n          setMessage(`Added ${newPersonObject.name}`);\r\n          setTimeout(() => {\r\n            setMessage(null);\r\n          }, 4500);\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(`Fail: ${error.response.data.error}`);\r\n          setTimeout(() => {\r\n            setErrorMessage(null);\r\n          }, 4500);\r\n        });\r\n    }\r\n    //either way clearing the input field by modifying the states\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    //conversion to int as id parameter by default is a string\r\n    // const idNumber = parseInt(id);\r\n    const personToDelete = persons.find((person) => person.id === id);\r\n    //asking for confirmation with a default browser popup\r\n    if (window.confirm(`Delete ${personToDelete.name}?`)) {\r\n      services\r\n        .remove(id)\r\n        .then(() => {\r\n          const newPersonList = persons.filter(\r\n            (eachPerson) => eachPerson.id !== id\r\n          );\r\n          setPersons(newPersonList);\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(\r\n            `Information of ${personToDelete.name} has already been removed from server`\r\n          );\r\n          setTimeout(() => {\r\n            setErrorMessage(null);\r\n          }, 4500);\r\n        });\r\n    }\r\n  };\r\n\r\n  const updateNameField = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n  const updateNumberField = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n  const updateFilterField = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message}></Notification>\r\n      <Error message={errorMessage}></Error>\r\n      <Filter filter={filter} updateFilterField={updateFilterField}></Filter>\r\n      <h3>add a new</h3>\r\n      <PersonForm\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        updateNameField={updateNameField}\r\n        updateNumberField={updateNumberField}\r\n        addNewPerson={addNewPerson}\r\n      ></PersonForm>\r\n      <h2>Numbers</h2>\r\n      <DisplayPhonebook\r\n        personsList={persons}\r\n        filter={filter}\r\n        handleDelete={handleDelete}\r\n      ></DisplayPhonebook>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App></App>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}